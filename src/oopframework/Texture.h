#ifndef TEXTURE
#define TEXTURE

#include <GL/glew.h>
#include <GL/gl.h>
#include <GL/glu.h>

#include <string>

/** This class abstracts a Texture. Usually a Texture is generated by the TextureManager class.
 * If you want to create a Texture by you're own, be sure to delete the Texture by youself and NOT by using the deleteTexture() function of the TextureManager class.
 * Actually there is no need to create Textures by not using the TextureManager.
 * If you want to directly write into the TextureData, use the PixelBuffer Object. Pixelbuffers are able to create a valid Texture Object from their Buffer which you can use as a normal texture.
 * @author Andy Reimann
 */
class Texture {
	//!< The TextureManager can access the private functions and members
	friend class TextureManager;

	public:
		/** Create a new Texture Object.
		 */
		Texture();
		/** This function binds the Texture into a specific Texture slot.
		 */
		void bind();
		/** This function unbinds the Texture from a specific Texture slot.
		 */
		void unbind();
		/** This function will return the width of the Texture.
		 * @return The width of the Texture
		 */
		unsigned getWidth() const;
		/** This function will return the height of the Texture.
		 * @return The height of the Texture
		 */
		unsigned getHeight() const;
		/** This is a normal EQUAL operator.
		*/
		bool operator==(Texture const& rhs);
		/** Destructor.
		*/
		~Texture();


	private:
		GLuint texID;		//!< The OpenGL texture ID
		GLuint texType;	//!< The type of texture
		GLuint minFilter;	//!< The type of min filter, the texture uses
		GLuint magFilter;	//!< The type of mag filter, the texture uses
		bool mipMaps;		//!< If true mipmaps are applied to the texture
		std::string name;	//!< The name of the Texture.
		GLuint refCnt;	//!< The reference counter of the texture.
		bool isPrivate;		//!< if true, the texture will not be shared between different objects.
		GLuint width;		//!< The height of the Texture.
		GLuint height;	//!< The width of the Texture.
		
};

#endif
